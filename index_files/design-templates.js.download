//let's wait for the DOM to load
document.addEventListener("DOMContentLoaded", function () {
  //this is for the mobile menu slide toggle
  var toggleMobileMenuButton = document.getElementById("toggleMobileMenu");
  if (toggleMobileMenuButton) {
    document
      .getElementById("toggleMobileMenu")
      .addEventListener("click", function () {
        slideToggle(document.getElementById("navigationMenu"), 500);
        document.querySelector(".navigation-links").classList.toggle("active");
        document.querySelector("#toggleMobileMenu").classList.toggle("active");
        document.querySelector("body").classList.toggle("mobile-menu-open");
      });
  }

  //this is for the transparent until scroll header
  var transparentHeaderUntilScroll = document.getElementById(
    "transparent-header-until-scroll"
  );
  if (transparentHeaderUntilScroll) {
    window.onscroll = function () {
      if (window.pageYOffset > 50) {
        document
          .getElementById("transparent-header-until-scroll")
          .classList.add("active");
      } else {
        document
          .getElementById("transparent-header-until-scroll")
          .classList.remove("active");
      }
    };
  }

  //this adds a class to the notification bar so we can use css to hide it
  var closeNotificationModal = document.getElementById(
    "close-notification-modal"
  );
  if (closeNotificationModal) {
    closeNotificationModal.addEventListener("click", function () {
      document.getElementById("notification-modal").classList.toggle("close");
    });
  }

  //this adds a class to the cookies bar so we can use css to hide it
  var closeCookiesBar = document.getElementById("close-cookies-bar");
  if (closeCookiesBar) {
    closeCookiesBar.addEventListener("click", function () {
      document.getElementById("cookies-bar").classList.toggle("close");
    });
  }
});

//this is for the mobile menu slide toggle
let slideUp = (target, duration = 500) => {
  target.style.transitionProperty = "height, margin, padding";
  target.style.transitionDuration = duration + "ms";
  target.style.boxSizing = "border-box";
  target.style.height = target.offsetHeight + "px";
  target.offsetHeight;
  target.style.overflow = "hidden";
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  window.setTimeout(() => {
    target.style.display = "none";
    target.style.removeProperty("height");
    target.style.removeProperty("padding-top");
    target.style.removeProperty("padding-bottom");
    target.style.removeProperty("margin-top");
    target.style.removeProperty("margin-bottom");
    target.style.removeProperty("overflow");
    target.style.removeProperty("transition-duration");
    target.style.removeProperty("transition-property");
  }, duration);
};

let slideDown = (target, duration = 500) => {
  target.style.removeProperty("display");
  let display = window.getComputedStyle(target).display;

  if (display === "none") display = "block";

  target.style.display = display;
  let height = target.offsetHeight;
  target.style.overflow = "hidden";
  target.style.height = 0;
  target.style.paddingTop = 0;
  target.style.paddingBottom = 0;
  target.style.marginTop = 0;
  target.style.marginBottom = 0;
  target.offsetHeight;
  target.style.boxSizing = "border-box";
  target.style.transitionProperty = "height, margin, padding";
  target.style.transitionDuration = duration + "ms";
  target.style.height = height + "px";
  target.style.removeProperty("padding-top");
  target.style.removeProperty("padding-bottom");
  target.style.removeProperty("margin-top");
  target.style.removeProperty("margin-bottom");
  window.setTimeout(() => {
    target.style.removeProperty("height");
    target.style.removeProperty("overflow");
    target.style.removeProperty("transition-duration");
    target.style.removeProperty("transition-property");
  }, duration);
};

var slideToggle = (target, duration = 500) => {
  if (window.getComputedStyle(target).display === "none") {
    return slideDown(target, duration);
  } else {
    return slideUp(target, duration);
  }
};
